name: CI/CD with Docker

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push auth-service
        uses: docker/build-push-action@v4
        with:
          context: ./auth
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

      - name: Build and push product-service
        uses: docker/build-push-action@v4
        with:
          context: ./product
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/product-service:latest

      - name: Build and push order-service
        uses: docker/build-push-action@v4
        with:
          context: ./order
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/order-service:latest

      - name: Build and push api-gateway
        uses: docker/build-push-action@v4
        with:
          context: ./api-gateway
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
